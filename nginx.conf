# C:\master-proxy-infra\nginx.conf
# A resilient master Nginx config for a phased deployment.

events {}

http {
    # --- KEY FIX: Use Docker's internal DNS server for runtime resolution ---
    resolver 127.0.0.11 valid=5s;

    # --- Server for the existing Chatbot Application ---
    # It listens for requests to chatdemo.lebor.io and forwards them to the
    # Chatbot's Nginx container, which is named 'nginx-proxy'.
    server {
        listen 80;
        server_name chatdemo.lebor.io;

        location / {
            # Use a variable to force Nginx to look up the IP at request time.
            set $chatbot_upstream nginx-proxy;
            proxy_pass http://$chatbot_upstream;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # --- FUTURE USE: Add your 'labs' application here later ---
    # When you are ready to deploy the TechLab app, you will add its
    # server block right here, like this:
    #
    # server {
    #     listen 80;
    #     server_name labs.lebor.io;
    #
    #     location / {
    #         set $techlab_upstream techlab_nginx;
    #         proxy_pass http://$techlab_upstream;
    #         proxy_set_header Host $host;
    #         # ... other headers
    #     }
    # }

    # --- SECURITY: Default server to block direct IP access ---
    # server {
    #     listen 80 default_server;
    #     server_name _;
    #     return 444; # Closes the connection immediately.
    # }
}