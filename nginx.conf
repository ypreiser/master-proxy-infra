# C:\master-proxy-infra\nginx.conf
# This is the master Nginx configuration that routes traffic to the correct application.

events {}

http {
    # --- Server for the new TechLab Flask Application ---
    # It listens for requests to labs.levor.io and forwards them to the
    # TechLab Nginx container, which we will name 'techlab_nginx'.
    server {
        listen 80;
        server_name labs.levor.io;

        location / {
            proxy_pass http://techlab_nginx; # This MUST match the container_name in techlab-flask's compose file
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # --- Server for the existing Chatbot Application ---
    # It listens for requests to chatdemo.levor.io and forwards them to the
    # Chatbot's Nginx container, which is named 'nginx-proxy'.
    server {
        listen 80;
        server_name chatdemo.levor.io; # Your existing domain

        location / {
            proxy_pass http://nginx-proxy; # This is the container_name from your chatbot-infra compose file
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # --- SECURITY: Default server to block direct IP access ---
    # This server block catches any request that doesn't match the domains above
    # (e.g., a request directly to your server's IP address).
    server {
        listen 80 default_server;
        server_name _; # Catch-all

        # Nginx-specific return code that closes the connection without sending a response.
        # This is more efficient and secure than returning a 403 or 404 error.
        return 444;
    }
}